# Import Laibrary :
import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt 
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

df = pd.read_csv(r"C:\Users\Dhrumil\Desktop\Work\insurance.csv")

df.head()

# Show the Rows and Columns 
df.shape

df.info()

df.isnull().sum()

df.describe()

#check the Distribution :
sns.set()
plt.figure(figsize = (6,6))
sns.displot(df['age'])
plt.title("Age Distribution")
plt.show()


# Destribution of sex :
plt.figure(figsize=(6,6))
sns.countplot(x="sex",data=df)
plt.title("Sex Distribution")
plt.show()

df['sex'].value_counts()

#Distribution for Bmi :
sns.displot(df['bmi'])
plt.show()


# Region Distribution :
df['region'].value_counts()


#Data Encoding :
df.replace({'sex':{'male':0,'female':1}},inplace=True)

df.replace({'smoker':{'yes':0,'no':1}},inplace = True)

df.replace ({'region':{'southeast':0 ,'southwest':1,'northwest':2,'northeast':3}}, inplace=True)

#Split Features (depandant and independent) :
x = df.drop(columns = "charges",axis=1)
y = df['charges']

x

y

# train and split the data :
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)

x_train.shape

x_test.shape

# Build Model (linear regression model):
reg= LinearRegression()
reg.fit(x_train,y_train)


training_data_prediction = reg.predict(x_train)


#score of training data :
r2_train = metrics.r2_score(y_train,training_data_prediction)

r2_train

test_data_prediction = reg.predict(x_test)

#score of test data : 
metrics.r2_score(y_test,test_data_prediction)

# make predictive System :
# age:30 , female : 1 , bmi : 22.7 , children : 0 , smoker : 1 , region : 0(sE)
sample_input_data = (30,1,22.7,0,1,0)

input_data_as_numpy_array = np.asarray(sample_input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = reg.predict(input_data_reshaped)

print("THe insurance coset is " , prediction)

